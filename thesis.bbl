% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{montgomery2017design}
D.~C. Montgomery, \emph{Design and analysis of experiments}.\hskip 1em plus
  0.5em minus 0.4em\relax John wiley \& sons, 2017.

\bibitem{williams2006gaussian}
C.~K. Williams and C.~E. Rasmussen, \emph{Gaussian processes for machine
  learning}.\hskip 1em plus 0.5em minus 0.4em\relax MIT press Cambridge, MA,
  2006, vol.~2, no.~3.

\bibitem{ceruzzi2003history}
P.~E. Ceruzzi, E.~Paul \emph{et~al.}, \emph{A history of modern
  computing}.\hskip 1em plus 0.5em minus 0.4em\relax MIT press, 2003.

\bibitem{olcf2020summit}
O.~R.~N. Laboratory, ``{Summit -- Oak Ridge Leardership Computing Facility},''
  \url{https://www.olcf.ornl.gov/olcf-resources/compute-systems/summit}, 2020,
  [Online; accessed 08-Jun-2020].

\bibitem{moore1965cramming}
G.~E. Moore \emph{et~al.}, ``Cramming more components onto integrated
  circuits,'' 1965.

\bibitem{wiki2020transistor}
Wikipedia, ``{Transistor count},''
  \url{https://en.wikipedia.org/wiki/Transistor_count}, 2020, [Online; accessed
  08-Jun-2020].

\bibitem{wiki2020chronology}
------, ``{Microprocessor Chronology},''
  \url{https://en.wikipedia.org/wiki/Microprocessor_chronology}, 2020, [Online;
  accessed 08-Jun-2020].

\bibitem{dennard1974design}
R.~H. Dennard, F.~H. Gaensslen, H.-N. Yu, V.~L. Rideout, E.~Bassous, and A.~R.
  LeBlanc, ``Design of ion-implanted mosfet's with very small physical
  dimensions,'' \emph{IEEE Journal of solid-state circuits}, vol.~9, no.~5, pp.
  256--268, 1974.

\bibitem{frank2001device}
D.~J. Frank, R.~H. Dennard, E.~Nowak, P.~M. Solomon, Y.~Taur, and H.-S.~P.
  Wong, ``Device scaling limits of si mosfets and their application
  dependencies,'' \emph{Proceedings of the IEEE}, vol.~89, no.~3, pp. 259--288,
  2001.

\bibitem{esmaeilzadeh2011dark}
H.~Esmaeilzadeh, E.~Blem, R.~S. Amant, K.~Sankaralingam, and D.~Burger, ``Dark
  silicon and the end of multicore scaling,'' in \emph{2011 38th Annual
  international symposium on computer architecture (ISCA)}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2011, pp. 365--376.

\bibitem{venkataramani2015approximate}
S.~Venkataramani, S.~T. Chakradhar, K.~Roy, and A.~Raghunathan, ``Approximate
  computing and the quest for computing efficiency,'' in \emph{2015 52nd
  ACM/EDAC/IEEE Design Automation Conference (DAC)}.\hskip 1em plus 0.5em minus
  0.4em\relax IEEE, 2015, pp. 1--6.

\bibitem{cheng2015core}
H.-Y. Cheng, J.~Zhan, J.~Zhao, Y.~Xie, J.~Sampson, and M.~J. Irwin, ``Core vs.
  uncore: The heart of darkness,'' in \emph{2015 52nd ACM/EDAC/IEEE Design
  Automation Conference (DAC)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2015, pp. 1--6.

\bibitem{henkel2015new}
J.~Henkel, H.~Khdr, S.~Pagani, and M.~Shafique, ``New trends in dark silicon,''
  in \emph{2015 52nd ACM/EDAC/IEEE Design Automation Conference (Dac)}.\hskip
  1em plus 0.5em minus 0.4em\relax IEEE, 2015, pp. 1--6.

\bibitem{balaprakash2012spapt}
P.~Balaprakash, S.~M. Wild, and B.~Norris, ``{SPAPT}: Search problems in
  automatic performance tuning,'' \emph{Procedia Computer Science}, vol.~9, pp.
  1959--1968, 2012.

\bibitem{ansel2014opentuner}
J.~Ansel, S.~Kamil, K.~Veeramachaneni, J.~Ragan-Kelley, J.~Bosboom, U.-M.
  O'Reilly, and S.~Amarasinghe, ``Opentuner: An extensible framework for
  program autotuning,'' in \emph{Proceedings of the 23rd international
  conference on Parallel architectures and compilation}.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2014, pp. 303--316.

\bibitem{byun2012autotuning}
J.-H. Byun, R.~Lin, K.~A. Yelick, and J.~Demmel, ``Autotuning sparse
  matrix-vector multiplication for multicore,'' \emph{EECS, UC Berkeley, Tech.
  Rep}, 2012.

\bibitem{petrovivc2020benchmark}
F.~Petrovi{\v{c}}, D.~St{\v{r}}el{\'a}k, J.~Hozzov{\'a}, J.~Ol’ha,
  R.~Trembeck{\`y}, S.~Benkner, and J.~Filipovi{\v{c}}, ``A benchmark set of
  highly-efficient cuda and opencl kernels and its dynamic autotuning with
  kernel tuning toolkit,'' \emph{Future Generation Computer Systems}, 2020.

\bibitem{balaprakash2018deephyper}
P.~Balaprakash, M.~Salim, T.~Uram, V.~Vishwanath, and S.~Wild, ``Deephyper:
  Asynchronous hyperparameter search for deep neural networks,'' in \emph{2018
  IEEE 25th International Conference on High Performance Computing
  (HiPC)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2018, pp. 42--51.

\bibitem{bruel2019autotuning}
P.~Bruel, S.~Quinito~Masnada, B.~Videau, A.~Legrand, J.-M. Vincent, and
  A.~Goldman, ``{Autotuning under Tight Budget Constraints: A Transparent
  Design of Experiments Approach},'' in \emph{The 19th Annual IEEE/ACM
  International Symposium in Cluster, Cloud, and Grid Computing (CCGrid
  2019)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE/ACM, 2019.

\bibitem{bruel2015autotuning}
P.~Bruel, M.~Amarís, and A.~Goldman, ``Autotuning gpu compiler parameters
  using opentuner,'' in \emph{Proceedings of the WSCAD (Simpósio em Sistemas
  Computacionais de Alto Desempenho), 2015}.

\bibitem{bruel2017autotuning}
------, ``{Autotuning CUDA compiler parameters for heterogeneous applications
  using the OpenTuner framework},'' \emph{Concurrency and Computation: Practice
  and Experience}, pp. e3973--n/a, 2017.

\bibitem{mametjanov2015autotuning}
A.~Mametjanov, P.~Balaprakash, C.~Choudary, P.~D. Hovland, S.~M. Wild, and
  G.~Sabin, ``Autotuning fpga design parameters for performance and power,'' in
  \emph{Field-Programmable Custom Computing Machines (FCCM), 2015 IEEE 23rd
  Annual International Symposium on}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2015, pp. 84--91.

\bibitem{xu2017parallel}
C.~Xu, G.~Liu, R.~Zhao, S.~Yang, G.~Luo, and Z.~Zhang, ``A parallel
  bandit-based approach for autotuning fpga compilation,'' in \emph{Proceedings
  of the 2017 ACM/SIGDA International Symposium on Field-Programmable Gate
  Arrays}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2017, pp. 157--166.

\bibitem{tiwari2009scalable}
A.~Tiwari, C.~Chen, J.~Chame, M.~Hall, and J.~K. Hollingsworth, ``A scalable
  auto-tuning framework for compiler optimization,'' in \emph{Parallel \&
  Distributed Processing, 2009. IPDPS 2009. IEEE International Symposium
  on}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2009, pp. 1--12.

\bibitem{hutter2009paramils}
F.~Hutter, H.~H. Hoos, K.~Leyton-Brown, and T.~St{\"u}tzle, ``{ParamILS}: an
  automatic algorithm configuration framework,'' \emph{Journal of Artificial
  Intelligence Research}, vol.~36, no.~1, pp. 267--306, 2009.

\bibitem{chu2020improving}
Y.~Chu, C.~Luo, H.~H. Hoos, Q.~Lin, and H.~You, ``Improving the performance of
  stochastic local search for maximum vertex weight clique problem using
  programming by optimization,'' \emph{arXiv}, pp. arXiv--2002, 2020.

\bibitem{tuzov2018tuning}
I.~Tuzov, D.~de~Andr{\'e}s, and J.-C. Ruiz, ``Tuning synthesis flags to
  optimize implementation goals: Performance and robustness of the leon3
  processor as a case study,'' \emph{Journal of Parallel and Distributed
  Computing}, vol. 112, pp. 84--96, 2018.

\bibitem{ziegler2019syntunsys}
M.~M. Ziegler, H.-Y. Liu, G.~Gristede, B.~Owens, R.~Nigaglioni, J.~Kwon, and
  L.~P. Carloni, ``Syntunsys: A synthesis parameter autotuning system for
  optimizing high-performance processors,'' in \emph{Machine Learning in VLSI
  Computer-Aided Design}.\hskip 1em plus 0.5em minus 0.4em\relax Springer,
  2019, pp. 539--570.

\bibitem{gerndt2018multi}
M.~Gerndt, S.~Benkner, E.~C{\'e}sar, C.~Navarrete, E.~Bajrovic, J.~Dokulil,
  C.~Guill{\'e}n, R.~Mijakovic, and A.~Sikora, ``A multi-aspect online tuning
  framework for hpc applications,'' \emph{Software Quality Journal}, vol.~26,
  no.~3, pp. 1063--1096, 2018.

\bibitem{kwon2019learning}
J.~Kwon, M.~M. Ziegler, and L.~P. Carloni, ``A learning-based recommender
  system for autotuning design fiows of industrial high-performance
  processors,'' in \emph{2019 56th ACM/IEEE Design Automation Conference
  (DAC)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp. 1--6.

\bibitem{wang2019funcytuner}
T.~Wang, N.~Jain, D.~Beckingsale, D.~Boehme, F.~Mueller, and T.~Gamblin,
  ``Funcytuner: Auto-tuning scientific applications with per-loop
  compilation,'' in \emph{Proceedings of the 48th International Conference on
  Parallel Processing}, 2019, pp. 1--10.

\bibitem{olha2019exploiting}
J.~Ol'ha, J.~Hozzov{\'a}, J.~Fousek, and J.~Filipovi{\v{c}}, ``Exploiting
  historical data: pruning autotuning spaces and estimating the number of
  tuning steps,'' in \emph{European Conference on Parallel Processing}.\hskip
  1em plus 0.5em minus 0.4em\relax Springer, 2019, pp. 295--307.

\bibitem{seymour2008comparison}
K.~Seymour, H.~You, and J.~Dongarra, ``A comparison of search heuristics for
  empirical code optimization.'' in \emph{CLUSTER}, 2008, pp. 421--429.

\end{thebibliography}
