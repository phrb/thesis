% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{ansel2014opentuner}
J.~Ansel, S.~Kamil, K.~Veeramachaneni, J.~Ragan-Kelley, J.~Bosboom, U.-M.
  O'Reilly, and S.~Amarasinghe, ``Opentuner: An extensible framework for
  program autotuning,'' in \emph{Proceedings of the 23rd international
  conference on Parallel architectures and compilation}.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2014, pp. 303--316.

\bibitem{bruel2017autotuning}
P.~Bruel, M.~Amarís, and A.~Goldman, ``{Autotuning CUDA compiler parameters
  for heterogeneous applications using the OpenTuner framework},''
  \emph{Concurrency and Computation: Practice and Experience}, pp. e3973--n/a,
  2017.

\bibitem{bruel2017autotuninghls}
P.~Bruel, A.~Goldman, S.~R. Chalamalasetti, and D.~Milojicic, ``{Autotuning
  High-Level Synthesis for FPGAs Using OpenTuner and LegUp},'' in
  \emph{International Conference on Reconfigurable Computing and FPGAs
  (ReConFig)}, 2017.

\bibitem{bruel2019autotuning}
P.~Bruel, S.~Quinito~Masnada, B.~Videau, A.~Legrand, J.-M. Vincent, and
  A.~Goldman, ``{Autotuning under Tight Budget Constraints: A Transparent
  Design of Experiments Approach},'' in \emph{The 19th Annual IEEE/ACM
  International Symposium in Cluster, Cloud, and Grid Computing (CCGrid
  2019)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE/ACM, 2019.

\bibitem{seymour2008comparison}
K.~Seymour, H.~You, and J.~Dongarra, ``A comparison of search heuristics for
  empirical code optimization.'' in \emph{CLUSTER}, 2008, pp. 421--429.

\bibitem{fisher1937design}
R.~A. Fisher, \emph{The design of experiments}.\hskip 1em plus 0.5em minus
  0.4em\relax Oliver And Boyd; Edinburgh; London, 1937.

\bibitem{bukh1992art}
P.~N.~D. Bukh, \emph{The art of computer systems performance analysis,
  techniques for experimental design, measurement, simulation and
  modeling}.\hskip 1em plus 0.5em minus 0.4em\relax JSTOR, 1992.

\bibitem{montgomery2017design}
D.~C. Montgomery, \emph{Design and analysis of experiments}.\hskip 1em plus
  0.5em minus 0.4em\relax John wiley \& sons, 2017.

\bibitem{box2005statistics}
G.~E. Box, J.~S. Hunter, and W.~G. Hunter, \emph{Statistics for experimenters:
  design, innovation, and discovery}.\hskip 1em plus 0.5em minus 0.4em\relax
  Wiley-Interscience New York, 2005, vol.~2.

\bibitem{williams2006gaussian}
C.~K. Williams and C.~E. Rasmussen, \emph{Gaussian processes for machine
  learning}.\hskip 1em plus 0.5em minus 0.4em\relax MIT press Cambridge, MA,
  2006, vol.~2, no.~3.

\bibitem{ceruzzi2003history}
P.~E. Ceruzzi, E.~Paul \emph{et~al.}, \emph{A history of modern
  computing}.\hskip 1em plus 0.5em minus 0.4em\relax MIT press, 2003.

\bibitem{olcf2020summit}
O.~R.~N. Laboratory, ``{Summit -- Oak Ridge Leardership Computing Facility},''
  \url{https://www.olcf.ornl.gov/olcf-resources/compute-systems/summit}, 2020,
  [Online; accessed 08-Jun-2020].

\bibitem{wiki2020transistor}
Wikipedia, ``{Transistor count},''
  \url{https://en.wikipedia.org/wiki/Transistor_count}, 2020, [Online; accessed
  08-Jun-2020].

\bibitem{wiki2020chronology}
------, ``{Microprocessor Chronology},''
  \url{https://en.wikipedia.org/wiki/Microprocessor_chronology}, 2020, [Online;
  accessed 08-Jun-2020].

\bibitem{moore1965cramming}
G.~E. Moore \emph{et~al.}, ``Cramming more components onto integrated
  circuits,'' 1965.

\bibitem{dennard1974design}
R.~H. Dennard, F.~H. Gaensslen, H.-N. Yu, V.~L. Rideout, E.~Bassous, and A.~R.
  LeBlanc, ``Design of ion-implanted mosfet's with very small physical
  dimensions,'' \emph{IEEE Journal of solid-state circuits}, vol.~9, no.~5, pp.
  256--268, 1974.

\bibitem{frank2001device}
D.~J. Frank, R.~H. Dennard, E.~Nowak, P.~M. Solomon, Y.~Taur, and H.-S.~P.
  Wong, ``Device scaling limits of si mosfets and their application
  dependencies,'' \emph{Proceedings of the IEEE}, vol.~89, no.~3, pp. 259--288,
  2001.

\bibitem{esmaeilzadeh2011dark}
H.~Esmaeilzadeh, E.~Blem, R.~S. Amant, K.~Sankaralingam, and D.~Burger, ``Dark
  silicon and the end of multicore scaling,'' in \emph{2011 38th Annual
  international symposium on computer architecture (ISCA)}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2011, pp. 365--376.

\bibitem{venkataramani2015approximate}
S.~Venkataramani, S.~T. Chakradhar, K.~Roy, and A.~Raghunathan, ``Approximate
  computing and the quest for computing efficiency,'' in \emph{2015 52nd
  ACM/EDAC/IEEE Design Automation Conference (DAC)}.\hskip 1em plus 0.5em minus
  0.4em\relax IEEE, 2015, pp. 1--6.

\bibitem{cheng2015core}
H.-Y. Cheng, J.~Zhan, J.~Zhao, Y.~Xie, J.~Sampson, and M.~J. Irwin, ``Core vs.
  uncore: The heart of darkness,'' in \emph{2015 52nd ACM/EDAC/IEEE Design
  Automation Conference (DAC)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2015, pp. 1--6.

\bibitem{henkel2015new}
J.~Henkel, H.~Khdr, S.~Pagani, and M.~Shafique, ``New trends in dark silicon,''
  in \emph{2015 52nd ACM/EDAC/IEEE Design Automation Conference (Dac)}.\hskip
  1em plus 0.5em minus 0.4em\relax IEEE, 2015, pp. 1--6.

\bibitem{top5002020list}
Top500, ``{Top500 List},'' \url{https://www.top500.org/}, 2020, [Online;
  accessed 08-Jun-2020].

\bibitem{dongarra2003linpack}
J.~J. Dongarra, P.~Luszczek, and A.~Petitet, ``{The LINPACK benchmark: past,
  present and future},'' \emph{Concurrency and Computation: practice and
  experience}, vol.~15, no.~9, pp. 803--820, 2003.

\bibitem{dongarra1990set}
J.~J. Dongarra, J.~Du~Croz, S.~Hammarling, and I.~S. Duff, ``A set of level 3
  basic linear algebra subprograms,'' \emph{ACM Transactions on Mathematical
  Software (TOMS)}, vol.~16, no.~1, pp. 1--17, 1990.

\bibitem{lawson1979basic}
C.~L. Lawson, R.~J. Hanson, D.~R. Kincaid, and F.~T. Krogh, ``Basic linear
  algebra subprograms for fortran usage,'' \emph{ACM Transactions on
  Mathematical Software (TOMS)}, vol.~5, no.~3, pp. 308--323, 1979.

\bibitem{videau2017boast}
B.~Videau, K.~Pouget, L.~Genovese, T.~Deutsch, D.~Komatitsch, F.~Desprez, and
  J.-F. M{\'e}haut, ``{BOAST}: A metaprogramming framework to produce portable
  and efficient computing kernels for hpc applications,'' \emph{The
  International Journal of High Performance Computing Applications}, p.
  1094342017718068, 2017.

\bibitem{hartono2009annotation}
A.~Hartono, B.~Norris, and P.~Sadayappan, ``Annotation-based empirical
  performance tuning using {Orio},'' in \emph{Parallel \& Distributed
  Processing, 2009. IPDPS 2009. IEEE International Symposium on}.\hskip 1em
  plus 0.5em minus 0.4em\relax IEEE, 2009, pp. 1--11.

\bibitem{ansel2009petabricks}
J.~Ansel, C.~Chan, Y.~L. Wong, M.~Olszewski, Q.~Zhao, A.~Edelman, and
  S.~Amarasinghe, ``Petabricks: a language and compiler for algorithmic
  choice,'' \emph{ACM Sigplan Notices}, vol.~44, no.~6, pp. 38--49, 2009.

\bibitem{balaprakash2012spapt}
P.~Balaprakash, S.~M. Wild, and B.~Norris, ``{SPAPT}: Search problems in
  automatic performance tuning,'' \emph{Procedia Computer Science}, vol.~9, pp.
  1959--1968, 2012.

\bibitem{byun2012autotuning}
J.-H. Byun, R.~Lin, K.~A. Yelick, and J.~Demmel, ``Autotuning sparse
  matrix-vector multiplication for multicore,'' \emph{EECS, UC Berkeley, Tech.
  Rep}, 2012.

\bibitem{petrovivc2020benchmark}
F.~Petrovi{\v{c}}, D.~St{\v{r}}el{\'a}k, J.~Hozzov{\'a}, J.~Ol’ha,
  R.~Trembeck{\`y}, S.~Benkner, and J.~Filipovi{\v{c}}, ``A benchmark set of
  highly-efficient cuda and opencl kernels and its dynamic autotuning with
  kernel tuning toolkit,'' \emph{Future Generation Computer Systems}, 2020.

\bibitem{balaprakash2018deephyper}
P.~Balaprakash, M.~Salim, T.~Uram, V.~Vishwanath, and S.~Wild, ``Deephyper:
  Asynchronous hyperparameter search for deep neural networks,'' in \emph{2018
  IEEE 25th International Conference on High Performance Computing
  (HiPC)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2018, pp. 42--51.

\bibitem{bruel2015autotuning}
P.~Bruel, M.~Amarís, and A.~Goldman, ``Autotuning gpu compiler parameters
  using opentuner,'' in \emph{Proceedings of the WSCAD (Simpósio em Sistemas
  Computacionais de Alto Desempenho), 2015}.

\bibitem{mametjanov2015autotuning}
A.~Mametjanov, P.~Balaprakash, C.~Choudary, P.~D. Hovland, S.~M. Wild, and
  G.~Sabin, ``Autotuning fpga design parameters for performance and power,'' in
  \emph{Field-Programmable Custom Computing Machines (FCCM), 2015 IEEE 23rd
  Annual International Symposium on}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2015, pp. 84--91.

\bibitem{abdelfattah2016performance}
A.~Abdelfattah, A.~Haidar, S.~Tomov, and J.~Dongarra, ``Performance, design,
  and autotuning of batched gemm for gpus,'' in \emph{International Conference
  on High Performance Computing}.\hskip 1em plus 0.5em minus 0.4em\relax
  Springer, 2016, pp. 21--38.

\bibitem{xu2017parallel}
C.~Xu, G.~Liu, R.~Zhao, S.~Yang, G.~Luo, and Z.~Zhang, ``A parallel
  bandit-based approach for autotuning fpga compilation,'' in \emph{Proceedings
  of the 2017 ACM/SIGDA International Symposium on Field-Programmable Gate
  Arrays}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2017, pp. 157--166.

\bibitem{tiwari2009scalable}
A.~Tiwari, C.~Chen, J.~Chame, M.~Hall, and J.~K. Hollingsworth, ``A scalable
  auto-tuning framework for compiler optimization,'' in \emph{Parallel \&
  Distributed Processing, 2009. IPDPS 2009. IEEE International Symposium
  on}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2009, pp. 1--12.

\bibitem{hutter2009paramils}
F.~Hutter, H.~H. Hoos, K.~Leyton-Brown, and T.~St{\"u}tzle, ``{ParamILS}: an
  automatic algorithm configuration framework,'' \emph{Journal of Artificial
  Intelligence Research}, vol.~36, no.~1, pp. 267--306, 2009.

\bibitem{chu2020improving}
Y.~Chu, C.~Luo, H.~H. Hoos, Q.~Lin, and H.~You, ``Improving the performance of
  stochastic local search for maximum vertex weight clique problem using
  programming by optimization,'' \emph{arXiv}, pp. arXiv--2002, 2020.

\bibitem{tuzov2018tuning}
I.~Tuzov, D.~de~Andr{\'e}s, and J.-C. Ruiz, ``Tuning synthesis flags to
  optimize implementation goals: Performance and robustness of the leon3
  processor as a case study,'' \emph{Journal of Parallel and Distributed
  Computing}, vol. 112, pp. 84--96, 2018.

\bibitem{ziegler2019syntunsys}
M.~M. Ziegler, H.-Y. Liu, G.~Gristede, B.~Owens, R.~Nigaglioni, J.~Kwon, and
  L.~P. Carloni, ``Syntunsys: A synthesis parameter autotuning system for
  optimizing high-performance processors,'' in \emph{Machine Learning in VLSI
  Computer-Aided Design}.\hskip 1em plus 0.5em minus 0.4em\relax Springer,
  2019, pp. 539--570.

\bibitem{gerndt2018multi}
M.~Gerndt, S.~Benkner, E.~C{\'e}sar, C.~Navarrete, E.~Bajrovic, J.~Dokulil,
  C.~Guill{\'e}n, R.~Mijakovic, and A.~Sikora, ``A multi-aspect online tuning
  framework for hpc applications,'' \emph{Software Quality Journal}, vol.~26,
  no.~3, pp. 1063--1096, 2018.

\bibitem{kwon2019learning}
J.~Kwon, M.~M. Ziegler, and L.~P. Carloni, ``A learning-based recommender
  system for autotuning design fiows of industrial high-performance
  processors,'' in \emph{2019 56th ACM/IEEE Design Automation Conference
  (DAC)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp. 1--6.

\bibitem{wang2019funcytuner}
T.~Wang, N.~Jain, D.~Beckingsale, D.~Boehme, F.~Mueller, and T.~Gamblin,
  ``Funcytuner: Auto-tuning scientific applications with per-loop
  compilation,'' in \emph{Proceedings of the 48th International Conference on
  Parallel Processing}, 2019, pp. 1--10.

\bibitem{olha2019exploiting}
J.~Ol'ha, J.~Hozzov{\'a}, J.~Fousek, and J.~Filipovi{\v{c}}, ``Exploiting
  historical data: pruning autotuning spaces and estimating the number of
  tuning steps,'' in \emph{European Conference on Parallel Processing}.\hskip
  1em plus 0.5em minus 0.4em\relax Springer, 2019, pp. 295--307.

\bibitem{bilmes1997optimizing}
J.~Bilmes, K.~Asanovic, C.-W. Chin, and J.~Demmel, ``Optimizing matrix multiply
  using {PHiPAC}: a portable, high-performance, ansi c coding methodology,'' in
  \emph{Proceedings of International Conference on Supercomputing, Vienna,
  Austria}, 1997.

\bibitem{dongarra1998automatically}
J.~J. Dongarra and C.~R. Whaley, ``Automatically tuned linear algebra software
  ({ATLAS}),'' \emph{Proceedings of SC}, vol.~98, 1998.

\bibitem{frigo1998fftw}
M.~Frigo and S.~G. Johnson, ``{FFTW}: An adaptive software architecture for the
  fft,'' in \emph{Acoustics, Speech and Signal Processing, 1998. Proceedings of
  the 1998 IEEE International Conference on}, vol.~3.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 1998, pp. 1381--1384.

\bibitem{tapus2002active}
C.~{\c{T}}{\u{a}}pu{\c{s}}, I.-H. Chung, J.~K. Hollingsworth \emph{et~al.},
  ``Active harmony: Towards automated performance tuning,'' in
  \emph{Proceedings of the 2002 ACM/IEEE conference on Supercomputing}.\hskip
  1em plus 0.5em minus 0.4em\relax IEEE Computer Society Press, 2002, pp.
  1--11.

\bibitem{vuduc2005oski}
R.~Vuduc, J.~W. Demmel, and K.~A. Yelick, ``{OSKI}: A library of automatically
  tuned sparse matrix kernels,'' in \emph{Journal of Physics: Conference
  Series}, vol.~16, no.~1.\hskip 1em plus 0.5em minus 0.4em\relax IOP
  Publishing, 2005, p. 521.

\bibitem{fursin2011milepost}
G.~Fursin, Y.~Kashnikov, A.~W. Memon, Z.~Chamski, O.~Temam, M.~Namolaru,
  E.~Yom-Tov, B.~Mendelson, A.~Zaks, E.~Courtois \emph{et~al.}, ``Milepost gcc:
  Machine learning enabled self-tuning compiler,'' \emph{International journal
  of parallel programming}, vol.~39, no.~3, pp. 296--327, 2011.

\bibitem{jordan2012multi}
H.~Jordan, P.~Thoman, J.~J. Durillo, S.~Pellegrini, P.~Gschwandtner,
  T.~Fahringer, and H.~Moritsch, ``A multi-objective auto-tuning framework for
  parallel codes,'' in \emph{High Performance Computing, Networking, Storage
  and Analysis (SC), 2012 International Conference for}.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 2012, pp. 1--12.

\bibitem{spampinato2014basic}
D.~G. Spampinato and M.~P{\"u}schel, ``A basic linear algebra compiler,'' in
  \emph{Proceedings of Annual IEEE/ACM International Symposium on Code
  Generation and Optimization}.\hskip 1em plus 0.5em minus 0.4em\relax ACM,
  2014, p.~23.

\bibitem{audet2014optimization}
C.~Audet, K.-C. Dang, and D.~Orban, ``Optimization of algorithms with opal,''
  \emph{Mathematical Programming Computation}, vol.~6, no.~3, pp. 233--254,
  2014.

\bibitem{nugteren2015cltune}
C.~Nugteren and V.~Codreanu, ``Cltune: A generic auto-tuner for opencl
  kernels,'' in \emph{Embedded Multicore/Many-core Systems-on-Chip (MCSoC),
  2015 IEEE 9th International Symposium on}.\hskip 1em plus 0.5em minus
  0.4em\relax IEEE, 2015, pp. 195--202.

\bibitem{guerreiro2015multi}
J.~Guerreiro, A.~Ilic, N.~Roma, and P.~Tom{\'a}s, ``Multi-kernel auto-tuning on
  gpus: Performance and energy-aware optimization,'' in \emph{Parallel,
  Distributed and Network-Based Processing (PDP), 2015 23rd Euromicro
  International Conference on}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2015, pp. 438--445.

\bibitem{fursin2015collective}
G.~Fursin, A.~Memon, C.~Guillon, and A.~Lokhmotov, ``Collective mind, part ii:
  Towards performance-and cost-aware software engineering as a natural
  science,'' \emph{arXiv preprint arXiv:1506.06256}, 2015.

\bibitem{chang2016efficient}
L.-W. Chang, I.~El~Hajj, C.~Rodrigues, J.~G{\'o}mez-Luna, and W.-m. Hwu,
  ``Efficient kernel synthesis for performance portable programming,'' in
  \emph{Microarchitecture (MICRO), 2016 49th Annual IEEE/ACM International
  Symposium on}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2016.

\bibitem{coelho2016mase}
C.~G. Coelho, C.~G. Abreu, R.~M. Ramos, A.~H. Mendes, G.~Teodoro, and C.~G.
  Ralha, ``Mase-bdi: agent-based simulator for environmental land change with
  efficient and parallel auto-tuning,'' \emph{Applied Intelligence}, vol.~45,
  no.~3, pp. 904--922, 2016.

\bibitem{beckingsale2017apollo}
D.~Beckingsale, O.~Pearce, I.~Laguna, and T.~Gamblin, ``Apollo: Reusable models
  for fast, dynamic tuning of input-dependent code,'' in \emph{The 31th IEEE
  International Parallel and Distributed Processing Symposium}, 2017.

\bibitem{kochenderfer2019algorithms}
M.~J. Kochenderfer and T.~A. Wheeler, \emph{Algorithms for optimization}.\hskip
  1em plus 0.5em minus 0.4em\relax Mit Press, 2019.

\bibitem{dobson2018introduction}
A.~J. Dobson and A.~G. Barnett, \emph{An introduction to generalized linear
  models}.\hskip 1em plus 0.5em minus 0.4em\relax CRC press, 2018.

\bibitem{agresti2015foundations}
A.~Agresti, \emph{Foundations of linear and generalized linear models}.\hskip
  1em plus 0.5em minus 0.4em\relax John Wiley \& Sons, 2015.

\bibitem{seber2015linear}
G.~Seber, \emph{The Linear Model and Hypothesis: A General Unifying
  Theory}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2015.

\bibitem{bishop2006pattern}
C.~M. Bishop, \emph{Pattern recognition and machine learning}.\hskip 1em plus
  0.5em minus 0.4em\relax springer, 2006.

\bibitem{roustant2018dicekriging}
\BIBentryALTinterwordspacing
{Roustant, Olivier and Ginsbourger, David and Deville, Yves and Chevalier,
  Clement and Richet, Yann}, ``{DiceKriging}.'' [Online]. Available:
  \url{https://cran.r-project.org/web/packages/DiceKriging/index.html}
\BIBentrySTDinterwordspacing

\bibitem{roustant2012dicekriging}
O.~Roustant, D.~Ginsbourger, and Y.~Deville, ``{{DiceKriging}, {DiceOptim}: Two
  {R} Packages for the Analysis of Computer Experiments by Kriging-Based
  Metamodeling and Optimization},'' vol.~51, no.~1, 2012, pp. 1--55.

\bibitem{balaprakash2011can}
P.~Balaprakash, S.~M. Wild, and P.~D. Hovland, ``Can search algorithms save
  large-scale automatic performance tuning?'' in \emph{ICCS}, 2011, pp.
  2136--2145.

\bibitem{balaprakash2012experimental}
------, ``An experimental study of global and local search algorithms in
  empirical performance tuning,'' in \emph{International Conference on High
  Performance Computing for Computational Science}.\hskip 1em plus 0.5em minus
  0.4em\relax Springer, 2012, pp. 261--269.

\bibitem{balaprakash2016automomml}
P.~Balaprakash, A.~Tiwari, S.~M. Wild, and P.~D. Hovland, ``{AutoMOMML:
  Automatic Multi-objective Modeling with Machine Learning},'' in \emph{High
  Performance Computing: 31st International Conference, ISC High Performance
  2016, Frankfurt, Germany, June 19-23, 2016, Proceedings}, M.~J. Kunkel,
  P.~Balaji, and J.~Dongarra, Eds.\hskip 1em plus 0.5em minus 0.4em\relax
  Springer International Publishing, 2016, pp. 219--239.

\bibitem{parsa2019pabo}
M.~Parsa, A.~Ankit, A.~Ziabari, and K.~Roy, ``{PABO: Pseudo Agent-Based
  Multi-Objective Bayesian Hyperparameter Optimization for Efficient Neural
  Accelerator Design},'' in \emph{2019 IEEE/ACM International Conference on
  Computer-Aided Design (ICCAD)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2019, pp. 1--8.

\end{thebibliography}
